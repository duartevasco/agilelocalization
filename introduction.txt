# Introduction 

We would like to start this book by explaining how this project was born. Several years ago when Luis started working as a Localization Manager, he couldn't find any information what so ever about the topic. He did however find a book called “A Practical Guide to Localization” by Bert Esselink. The book gave him great insight but somehow seemed too general, lacking practical examples and not helping him much on his daily tasks.

His responsibilities at work weren't just limited to the localization of the product; they included localization testing as well. The number of books available on the market related to this topic was even smaller. Therefore the only thing he could do was to completely trust the external testing vendors that were helping him with the task. In the end Luis and the vendors were able to deliver a fantastic product localized in more than fifty languages to millions of customers without any major problems. With this he learned a lot, however he still felt frustrated with the lack of information available about the topic. He felt that others would suffer the same frustrations that he felt. Perhaps this pain could be avoided if there was more information readily available to everyone.

As the company where Luis worked adopted Agile Software Development, another challege become critical: how to adapt the localization process to the Agile Software Development process in use. This wasn’t an easy task. Luis needed to work closely with all the different team members in order to change the old ways of thinking and adapt to this new way of working. Additionally, this transformation could not be performed only within his own company. Readers that are familiar with Agile Software Development understand its benefits (faster time to market, quicker feedback and easier to assimilate needed changes, etc.); but Agile is a different paradigm. Agile Software Development is a more integrated way of developing software one that requires and benefits from end-to-end thinking. This meant that the Agile adoption within the Localization process was not performed only within his own company but with the external vendors as well.

Vendors were used to receiving a complex localization request at the end of a development phase. It was normal for them to receive a request with a large amount of disparate strings to be translated without any proper contextual information. When strings are translated in isolation it is common that translations lose their original meaning and that leads to a poor localization job.
[TODO]: choose a more graphical and obvious example--> For example a simple word such as “Go” may have different meanings depending on the context, without this information it is impossible for the translator to perform an optimal job.
Localization testing in these conditions became a very difficult task that left the localization testing vendor in a very difficult position. After all, how can we test a product in different languages when there was no information whatsoever about how the user interface (GUI) would work or how the flow would be from screen to screen? It was almost impossible for the localization testing vendor to create test cases in order to test the product. All this happened just a few weeks before the release date. This needed to be changed.

Life wasn't easy for the localization vendors either. For them to integrate with the Agile Software Development workflow they needed to change their way of working. Localization vendors needed to be able to receive small batches of work in each iteration as portions of the product (i.e. User Stories) were completed. The teams needed to find a way how they could generate all the necessary information in order for the vendors to perform high quality localization and deliver it back in a very short time frame. Wim (our co-author) gave priceless help. He used his knowledge and experience and was able to change how the localization testing vendor cooperated with the product team. Wim's teams were able to start testing all the implemented stories at the end of each iteration. This was much more adequate to the project's needs, especially when compared with the traditional method where they would test the entire product at the end.

At that time (circa 2005) we already had a wealth of information about Agile. However, using Agile ideas within the localization portion of the project was something completely new and required new ways of thinking. Luis still remembers how many claimed it was impossible to have a fully localized product at the end of each iteration, yet Luis and the team did it!
It is quite common for the authors to find themselves having similar discussions still today. Many still don't believe that what Luis and the team did in 2005 is possible. We continuosly discuss this experience with many people in industry, and we realize that companies still struggle with this topic. Many companies still localize their products and services in less-than-optimal ways, wasting time and resources in order to release a fully localized product. Unfortunately it is still quite common to see companies treating localization as pure one to one word or phrase translation, this can raise numerous quality problems in the product. A common example is the way software terminology are produced and maintained: where companies do plain translations without thinking about how the word is localized by the industry in the target language.

In our experience most companies still do localization in “waterfall” mode: all development is finished before localization starts. The Localization team isn’t involved until a very late stage of the development cycle. Later, when large issues arise during localization, the release date of the product is highly impacted. In the worst case, the release must be performed only in English and the company risks losing market share. To avoid these risks we should aim to have localization done in small batches during  the development phase and inside the development iteration. This will deliver much faster feedback and will give the development teams a chance to easily correct any functional/localization errors as soon as they occur.

In our experience all these problems are complex but they are not extremely difficult to tackle. We value this knowledge in such way that we think if it isn’t shared it will be a waste. We truly believe we can help the community sharing in this book our experince and what we learned.

In our view, this book is a contribution to all companies that want to localize their products to reach a global market but don’t know how to approach it correctly. We hope to help your company decrease time to market with a localized product without major localization errors.  We believe if companies apply what we have learned they will be able to improve their localization quality drastically while making it more cost-effective.

We will use a story (not completely based on real events) as the vehicle for our ideas. We believe human beings can understand and learn from stories better than reading boring technical books. This book will tell us the story of a CTO that took the responsibility of changing his company’s method of working in order to be able to keep the company alive in a newer challenging era where companies fight in a global market.

Super Soft was a successful company but everything started to change with new market challenges. Super Soft started to be too slow and the lack of localized products caused a huge loss of market share outside of the US. They were slower than their European competitors, they needed to change, and they needed to find a way to regain their market share.

To solve all these challenges a new CTO was appointed; his responsibility was to change the way the company worked and to make the necessary changes in order to put the company back on track. As the new CTO learned about what other successful companies did, he eventually decided to hire two key people in our story: an agile coach and a localization manager. The story will describe how these two characters brought their knowledge into the organization and helped the company to regain their prestigious brand. The agile coach will explain simple ideas about how the organization can be established and how teams should work inside of this organization. The localization manager will demonstrate good and bad ways of doing localization. As the company changes their approach we will see how the Localization Manager tackles topics such as localization vendors and localization testing.

This is a story of transformation. A story where SuperSoft learns (the hard way) that disregarding localized markets comes with a serious consequences in our globalized world. This is a story that walks us through SuperSoft's transformation from market-laggard to market-leader, where the use of a new approach to Localization and the adoption of Agile Software Development become clear competitive advantages with significant impact in the market performance. During this story we will focus on concrete examples of implementing the activities demonstrated by the two key characters in our story. These examples aim to make it easy for the reader to apply these activities for his or her own purpose. But we are going too fast, let’s see how the problem started…